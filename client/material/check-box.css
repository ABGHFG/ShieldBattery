@value colorTextSecondary, colorDividers, alphaDividers from '../styles/colors.css';
@value amberA400, colorBackground, colorTextFaint from '../styles/colors.css';
@value fastOutSlowIn from './curves.css';

@value boxWidth: 18px;
@value boxHeight: 18px;

.checkBox {
  composes: flex itemsCenter from '../styles/flex.css';
  position: relative;
  cursor: pointer;
  overflow: visible;
  height: auto;
  padding: 8px;
  line-height: calc(boxHeight + 2px);
  min-width: boxWidth;
  min-height: calc(boxHeight + 2px);
}

.checkBox input {
  position: absolute;
  cursor: pointer;
  opacity: 0;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  padding: 0;
  margin: 0;
  outline: 0;
}

.checkBox label {
  order: 2;
  user-select: text;
  margin-left: 10px; /* the box is 18px wide, so this hits a 4dp multiple */
  pointer-events: none;
}

.iconContainer {
  order: 1;
  width: boxWidth;
  height: boxHeight;
  position: relative;
}

.iconContainer:before {
  background-color: transparent;
  border-radius: 50%;
  content: '';
  position: absolute;
  display: block;
  width: auto;
  height: auto;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  transition: all 400ms fastOutSlowIn;
}

.iconContainer:after {
  content: '';
  position: absolute;
  top: -8px;
  left: -8px;
  bottom: -8px;
  right: -8px;
  border: none;
}

.focused:not(.disabled) .iconContainer:before {
  left: -8px;
  top: -8px;
  right: -8px;
  bottom: -8px;
}

.focused:not(.disabled):not(.checked) .iconContainer {
  background-color: colorDividers;
}

.icon {
  composes: fastOutSlowInShort from './curves.css';
  position: absolute;
  top: 0;
  left: 0;
  width: boxWidth;
  height: boxHeight;
  background-color: transparent;
  border: 2px solid colorTextSecondary;
  border-radius: 2px;
}

/*
  NOTE(tec27): This is a dumb hack that I learned from Angular Material. It renders a check mark
  by rendering a table element with no content but a transparent border on its bottom and right
  edge, and sizing the table such that its appropriate for our box size. This element can then be
  rotated in and will look correct.
*/
.icon:after {
  transition: all 250ms fastOutSlowIn;
  transform: rotate(-135deg);
  display: table;
  position: absolute;
  left: calc(boxWidth / 3 - 2px);
  top: calc(boxHeight / 9 - 2px);
  width: calc(boxWidth / 3);
  height: calc(boxWidth * 2 / 3);
  border: 2px solid transparent;
  border-top: 0;
  border-left: 0;
  content: '';
  box-sizing: border-box;
}

.checked.focused .iconContainer:before {
  /* TODO(tec27): replace with a color() operation once that works properly with @values */
  background-color: rgba(255, 196, 0, alphaDividers); /* amberA400 */
}

.checked .icon {
  border: 2px solid amberA400;
  background-color: amberA400;
}

.checked .icon:after {
  transform: rotate(45deg);
  border-color: colorBackground;
}

.disabled .icon {
  border-color: colorTextFaint;
}

.checked.disabled.focused .iconContainer:before {
  background-color: colorDividers;
}

.checked.disabled .icon {
  background-color: colorTextFaint;
}
