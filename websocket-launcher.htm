<!DOCTYPE html>
<html>
<head>
  <title>Websocket Test Launcher</title>
  <style type="text/css">
    body {
      font: 14px Arial, sans-serif;
    }

    h1 {
      margin: 4px 0px 8px 0px;
      font-size: 24px;
    }

    p {
      margin: 2px 0px 2px 0px;
    }

    label {
      width: 16em;
      text-align: right;
      margin-right: 4px;
      display: inline-block;
    }

    input[type="text"] {
      width: 30em;
    }

    .settings {
      border: 1px solid #777;
      border-radius: 8px;
      margin: 10px 0px 10px 0px;
      padding: 8px;
    }
  </style>
</head>
<body>
  <div class="settings">
    <h1>Settings For Both</h1>
    <p>
      <label for="username">Username:</label>
      <input type="text" id="username" value="tec27" />
    </p>
    <p>
      <label for="injectees">Injectees (comma-separated):</label>
      <input type="text" id="injectees" value="wmode.dll" />
    </p>
  </div>
  <p>Game status: <span id="game-status" style="font-weight:bold;">Not running</span></p>
  <div class="settings">
    <h1>Hosting Only</h1>
    <p>
      <label for="host-mapdir">Map directory:</label>
      <input type="text" id="host-mapdir" value="C:\Program Files (x86)\StarCraft\Maps" />
    </p>
    <p>
      <label for="host-mapfile">Map file:</label>
      <input type="text" id="host-mapfile" value="ladder\(4)Lost Temple.scm" />
    </p>
    <button id="launcher-btn">Host Game!</button>
  </div>
  <div class="settings">
    <h1>Joining Only</h1>
    <p>
      <label for="join-address">Host IP:</label>
      <input type="text" id="join-address" value="192.168.1.2" />
    </p>
    <p>
      <label for="join-port">Host Port:</label>
      <input type="text" id="join-port" value="6112" />
    </p>
    <button id="join-btn">Join Game!</button>
  </div>
  <script type="text/javascript" src="http://localhost:33198/socket.io/socket.io.js"></script>
  <script type="text/javascript">
    var socket = io.connect('http://localhost:33198/site')
      , connectedSockets = 0

    socket.on('hello', function(cb) {
      cb('world')
    })

    socket.on('game:connected', function()  {
      connectedSockets++
      document.querySelector('#game-status').innerHTML = 'Running'
    }).on('game:disconnected', function() {
      connectedSockets--
      if (connectedSockets <= 0) {
        document.querySelector('#game-status').innerHTML = 'Not running'
      }
    })

    function getUsername() {
      return document.querySelector('#username').value || 'tec27'
    }

    function getHostMapPath() {
      return (document.querySelector('#host-mapdir').value ||
          'C:\\Program Files (x86)\\StarCraft\\Maps')  + '\\' +
          (document.querySelector('#host-mapfile'.value) || 'ladder\\(4)Lost Temple.scm')
    }

    function getJoinAddress() {
      return document.querySelector('#join-address').value || '192.168.1.2'
    }

    function getJoinPort() {
      return document.querySelector('#join-port').value || '6112'
    }

    function handleStatusCreate(status) {
      if (status != 'init') return

      var injecteesElem = document.querySelector('#injectees')
      var injectees = injecteesElem.value ?
          document.querySelector('#injectees').value.split(',') : []
      socket.emit('game:load', injectees, function(errors) {
        var launch = true
        for(var error in errors) {
          console.log('Error loading ' + error + ': ' + errors[error])
          launch = false
        }

        if (launch) {
          socket.emit('game:start', { username: getUsername()
                                    , map: getHostMapPath()
                                    })
        }
      })
    }

    function handleStatusJoin(status) {
      if (status != 'init') return

      var injecteesElem = document.querySelector('#injectees')
      var injectees = injecteesElem.value ?
          document.querySelector('#injectees').value.split(',') : []
      socket.emit('game:load', injectees, function(errors) {
        var launch = true
        for(var error in errors) {
          console.log('Error loading ' + error + ': ' + errors[error])
          launch = false
        }

        if (launch) {
          socket.emit('game:join',  { username: getUsername()
                                    , address: getJoinAddress()
                                    , port: getJoinPort()
                                    })
        }
      })
    }

    document.querySelector('#launcher-btn').addEventListener('click', function() {
      socket.once('game:status', handleStatusCreate)
      socket.emit('launch', function(err) {
        if (err) {
          console.log('Error launching:')
          console.dir(err)
        }
      })
    })

    document.querySelector('#join-btn').addEventListener('click', function() {
      socket.once('game:status', handleStatusJoin)
      socket.emit('launch', function(err) {
        if (err) {
          console.log('Error joining:')
          console.dir(err)
        }
      })
    })
  </script>
</body>
</html>
